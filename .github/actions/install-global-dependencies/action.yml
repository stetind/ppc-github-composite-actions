# ------------------------------------------------------------------------------
# Composite Action: intall-global-dependencies
#
# This action installs global NPM dependencies and configures NPM with the 
# provided authentication token. It also performs a local npm install with
# options based on whether it's a production or development environment.
#
# This action is useful as a prerequisite for any workflow that requires
# specific global NPM packages and proper NPM authentication setup.
#
# Behavior:
# - Sets up NPM token for authentication
# - Installs specified global NPM dependencies
# - Performs either a production or development npm install based on input
#
# Output:
# - Global NPM dependencies will be available for subsequent steps
# - NPM authentication will be configured
# - Local dependencies will be installed
# ------------------------------------------------------------------------------

name: 'ðŸ”§ Global Dependencies'

inputs:
  npm_token:
    description: 'NPM authentication token used for accessing private packages and configuring NPM registry'
    required: true
  production:
    description: 'When set to "true", performs a production install (--omit=dev). Otherwise, installs all dependencies.'
    required: false
    default: 'false'

runs:
  using: 'composite'
  steps:
    - name: ðŸ”§ Setup Npm Token
      shell: bash
      run: |
        npm config set //registry.npmjs.org/:_authToken ${{ inputs.npm_token }} &&
        echo "//registry.npmjs.org/:_authToken=${{ inputs.npm_token }}" > ./.npmrc &&
        cp ./.npmrc ~/.npmrc

    - name: 'Install Global Dependencies'
      shell: bash
      run: |
        npm install -g \
        cross-env@10.0.0 \
        dotenv@17.2.1 \
        dotenv-cli@9.0.0 \
        esbuild@0.25.8 \
        husky@9.1.7 \
        npm@11.5.1 \
        npm-check-updates@18.0.2 \
        rimraf@6.0.1 \
        typescript@5.8.3 \
        ts-node@10.9.2 \
        esbuild-node-externals@1.18.0

    - name: 'Upgrade Global Dependencies'
      shell: bash
      run: |
        npm outdated -g && npm update -g

    - name: Debug Production Input
      shell: bash
      run: |
        echo "Production input value: >${{ inputs.production }}< Type: $(echo "${{ inputs.production }}" | awk '{print typeof($0)}')"

    - name: Npm Install (Only Prod)
      if: ${{ inputs.production == 'true' }}
      run: npm ci --ignore-scripts --omit=dev
      shell: bash

    - name: Npm Install
      if: ${{ inputs.production != 'true' }}
      run: npm ci --ignore-scripts
      shell: bash
