# ------------------------------------------------------------------------------
# Composite Action: check-install-gh
#
# This action verifies and installs the GitHub CLI (gh) if not present.
# It ensures the gh CLI tool is available for GitHub API operations.
#
# Features:
# - Automatic gh CLI detection
# - Installation if not present
# - Version verification
# - Platform-aware installation
# - Proper error handling
#
# Prerequisites:
# - apt-get/curl available (for installation if needed)
# - Sufficient permissions to install packages
#
# Inputs:
# - None required
#   Action automatically handles detection and installation
#
# Outputs:
# - installed: Boolean indicating if installation was performed
# - version: Installed gh CLI version
#
# Example Usage:
# ```yaml
# - uses: ./.github/actions/check-install-gh
#   name: Ensure GitHub CLI is available
# ```
#
# Error Handling:
# - Checks system package manager availability
# - Validates installation success
# - Reports detailed error messages
# ------------------------------------------------------------------------------


name: check-install-gh
description: Ensures GitHub CLI (gh) is installed and available

outputs:
  installed:
    description: 'Whether gh CLI was newly installed'
    value: ${{ steps.check_gh.outputs.installed  }}
  version:
    description: 'Installed gh CLI version'
    value: ${{ steps.check_gh.outputs.version  }}

runs:
  using: composite
  steps:
    - name: Check and install gh
      id: check_gh
      shell: bash
      run: |
        set -e
        echo "::notice::🔍 Checking for gh installation..."
        if ! command -v gh &> /dev/null; then
          # Function to handle command execution and redirect output
          execute_command() {
            if command -v sudo &> /dev/null; then
              sudo "$@" &> /dev/null || "$@" &> /dev/null || {
                echo "::error::Failed to execute: $*"
                return 1
            }
            else
              "$@" &> /dev/null || {
                echo "::error::Failed to execute: $*"
                return 1
            }
            fi
          }
          
          echo "::notice::📦 gh not found. Installing..."
        
          (type -p wget >/dev/null || (execute_command update && execute_command apt install wget -y)) \
            && execute_command mkdir -p -m 755 /etc/apt/keyrings \
            && out=$(mktemp) && wget -nv -O$out https://cli.github.com/packages/githubcli-archive-keyring.gpg \
            && cat $out | execute_command tee /etc/apt/keyrings/githubcli-archive-keyring.gpg \
            && execute_command chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \
            && execute_command mkdir -p -m 755 /etc/apt/sources.list.d \
            && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | execute_command tee /etc/apt/sources.list.d/github-cli.list \
            && execute_command apt update \
            && execute_command apt install gh -y -f

          execute_command apt update \
            && execute_command apt install -y -f gh
    
          echo "installed=true" >> $GITHUB_OUTPUT
          echo "::notice::✅ gh installed successfully"
        else
          echo "installed=false" >> $GITHUB_OUTPUT
          echo "::notice::✅ gh is already installed"
        fi
        
        # Verify installation
        if ! command -v gh &> /dev/null; then
          echo "::error::GitHub CLI installation failed"
          exit 1
        fi
        
        echo "::notice::📊 GitHub CLI installed successfully: $(gh --version | head -n1)"
        echo "version=$(gh --version | head -n1)" >> $GITHUB_OUTPUT
