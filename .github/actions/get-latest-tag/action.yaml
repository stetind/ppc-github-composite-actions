name: Get Latest Git Tag

inputs:
  tag:
    type: string
    required: false
    default: ''

outputs:
  selected_tag:
    description: Selected git tag
    value: ${{ steps.select_tag.outputs.selected_tag }}
  latest_tag:
    description: Latest git tag
    value: ${{ steps.get_tag.outputs.latest_tag }}

runs:
  using: composite
  steps:
    - name: 🏷️ Get latest tag
      id: get_tag
      shell: bash
      run: |
        # Loop through the latest releases and find the most recent published release tag
          set -eo pipefail
          
          page=1
          latest_tag="not_found"
          
          while true; do
            echo "🔄 Fetching page $page of releases..."
            releases=$(gh api "/repos/${{ github.repository }}/releases?per_page=100&page=$page" \
              --jq '[.[] | select(.draft == false and .prerelease == false and .tag_name | test("^v[0-9]+\\.[0-9]+\\.[0-9]+$")) | .tag_name][]')
          
            if [[ -z "$releases" ]]; then
              break
            fi
          
            for tag in $releases; do
              latest_tag=$tag
              break  # first valid one (most recent)
            done
          
            if [[ "$latest_tag" != "not_found" ]]; then
              echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT
              echo "::notice ::Latest published semver tag found: $latest_tag"
              break
            fi
          
            ((page+=1))
          done
          
          if [[ "$latest_tag" == "not_found" ]]; then
            echo "::warning ::No valid semver published release tag found, using v0.0.0"
            echo "latest_tag=v0.0.0" >> $GITHUB_OUTPUT
          fi

    - name: 🏷️ Use provided tag or latest tag
      id: select_tag
      shell: bash
      run: |
        LATEST="${{ steps.get_tag.outputs.latest_tag }}"
        TAG_INPUT="${{ inputs.tag }}"
        
        if [[ -n "$TAG_INPUT" ]]; then
          echo "selected_tag=$TAG_INPUT" >> $GITHUB_OUTPUT
          echo "::notice ::Using provided tag: $TAG_INPUT"
        else
          echo "selected_tag=$LATEST" >> $GITHUB_OUTPUT
          echo "::notice ::Using latest tag: $LATEST"
        fi
