# ------------------------------------------------------------------------------
# Composite Action: Create PR and Merge
#
# This action creates a pull request from a source branch to a target branch,
# and optionally merges it based on the specified merge option. It supports
# different merge strategies and branch cleanup options.
#
# Features:
# - Creates pull request with customizable title
# - Automatically adds release and automation labels
# - Supports different merge options (none, merge, merge and delete)
# - Handles branch cleanup after successful merge
# - Uses GitHub CLI for operations
#
# Prerequisites:
# - GitHub CLI must be installed (handled by check-install-gh action)
# - Appropriate GitHub token with required permissions
#
# Inputs:
# - token: GitHub token with necessary permissions for PR and merge operations
# - title: PR title (defaults to "ðŸ“¦ New Release")
# - merge_option: Strategy for merging and branch cleanup
#   - 'none': Only create PR without merging
#   - 'merge': Create PR and merge without branch deletion
#   - 'merge and delete': Create PR, merge, and delete source branch
# - target: Target branch for the PR (defaults to 'main')
# - source: Source branch for the PR
#
# Steps:
# 1. Installs GitHub CLI if not present
# 2. Creates pull request with specified parameters
# 3. Merges pull request if merge_option is not 'none'
# 4. Handles branch cleanup based on merge_option
# ------------------------------------------------------------------------------
name: Create PR and Merge
description: Creates and optionally merges a pull request with support for branch cleanup

inputs:
  token:
    description: 'GitHub token with permissions for PR creation and merging'
    required: true
  title:
    description: 'Title for the pull request (defaults to "New Release")'
    required: false
    default: 'New Release'
  merge_option:
    description: 'Merge strategy (none, merge, merge and delete)'
    required: false
    default: 'merge and delete'
  target:
    description: 'Target branch for the pull request'
    required: false
    default: 'main'
  source:
    description: 'Source branch for the pull request'
    required: true
outputs:
  pr_url:
    description: 'The URL of the created / merged PR'
    value: ${{ steps.create_pr.outputs.pr_url }}

runs:
  using: "composite"
  steps:
    - name: ðŸ”§ Install GH
      uses: stetind/ppc-github-composite-actions/.github/actions/check-install-gh@__VERSION__

    - name: Set safe Directory
      id: safe_dir
      shell: bash
      run: |
        git config --global --add safe.directory "$(pwd)"

    - name: ðŸ”„ Create Pull Request
      id: create_pr
      shell: bash
      if: inputs.merge_option != 'none'
      env:
        GH_TOKEN: ${{ inputs.token }}
      run: |
        # First check if PR already exists
        EXISTING_PR=$(gh pr list --head "${{ inputs.source }}" --base "${{ inputs.target }}" --json url --jq '.[0].url')
        
        if [ -n "$EXISTING_PR" ]; then
          echo "::notice::Using existing pull request: $EXISTING_PR"
          echo "pr_url=$EXISTING_PR" >> $GITHUB_OUTPUT
        else
          # Create new PR if none exists
          PR_URL=$(gh pr create \
            --base "${{ inputs.target }}" \
            --head "${{ inputs.source }}" \
            --title "${{ inputs.title }}" \
            --body "This PR contains changes for ${{ inputs.title }}" \
            --label "release" \
            --label "automated pr")
        
          if [ $? -eq 0 ]; then
            echo "::notice::Pull request created successfully: $PR_URL"
            echo "pr_url=$PR_URL" >> $GITHUB_OUTPUT
          else
            echo "::error::Failed to create pull request"
            exit 1
          fi
        fi

    - name: ðŸ”€ Merge Pull Request
      shell: bash
      if: |
        inputs.merge_option != 'none' && 
        steps.create_pr.outputs.pr_url != ''
      run: |
        PR_NUMBER=$(echo "${{ steps.create_pr.outputs.pr_url }}" | awk -F'/' '{print $NF}')
        DELETE_FLAG=${{ inputs.merge_option == 'merge and delete' }}
    
        if gh pr merge $PR_NUMBER --admin --merge --delete-branch=$DELETE_FLAG; then
          echo "::notice::Pull request merged successfully"
        else
          echo "::error::Failed to merge pull request"
          exit 1
        fi